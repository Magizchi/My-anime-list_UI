{"version":3,"sources":["assets/svg/Ellipsis.svg","constants/Routes.ts","constants/API.ts","models/Anime.ts","utils/anime.ts","containers/AnimePage/index.tsx","containers/Errors/404.tsx","containers/Footer/Footer.tsx","containers/Header/index.tsx","components/molecules/Card/index.tsx","models/Manga.ts","utils/card.ts","utils/manga.ts","containers/Home/AnimeInfo/index.tsx","containers/Home/MangaInfo/index.tsx","containers/Home/index.tsx","models/Home.ts","containers/MangaPage/index.tsx","contexts/Cookies.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Routes","API","animeBuilder","values","title","image","trailer","episodes","premiered","score","synopsis","genres","opening","ending","id","published","duration","formatAnime","props","image_url","trailer_url","map","genre","name","opening_themes","ending_themes","mal_id","aired","string","customStyles","content","top","left","right","bottom","transform","width","height","background","AnimePage","useState","anime","setAnime","modalIsOpen","setIsOpen","PATH","process","useParams","useEffect","a","fetch","ANIME_DETAIL","then","data","json","res","response","getAnime","className","to","HOME_PAGE","src","alt","isOpen","onRequestClose","style","contentLabel","frameBorder","allow","allowFullScreen","onClick","join","op","index","key","end","Error","Footer","href","Header","enableMultiContainer","position","toast","POSITION","TOP_CENTER","Card","isHover","setIsHover","onMouseOver","onMouseLeave","backgroundImage","backgroundColor","mangaBuilder","status","type","volumes","chapters","formatCard","formatManga","AnimeInfo","isCollapse","setIsCollapse","outline","isOpened","ANIME_INFO","MangaInfo","manga","MANGA_INFO","HomePage","favorite","homeBuilder","homeInfo","setHomeInfo","animeId","setAnimeId","mangaId","setMangaId","selectedAnime","setSelectedAnime","selectedManga","setSelectedManga","animeCollapse","setAnimeCollapse","MangaCollapse","setMangaCollapse","HOME","mode","result","length","settings","dots","infinite","speed","slidesToShow","slidesToScroll","m","LoadingSVG","MangaPage","setManga","MANGA_DETAIL","getManga","CookiesContext","React","createContext","cookie","setCookie","Authentication","children","Cookies","get","Provider","value","App","exact","path","component","Home","ANIME_PAGE","MANGA_PAGE","ERROR_PAGE","Error404","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3df59267.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ellipsis.d0e3870e.svg\";","enum Routes {\n  HOME_PAGE = \"/ohara-ui/\",\n  ANIME_PAGE = \"/ohara-ui/top/anime/:id\",\n  ANIME_INFO = \"/ohara-ui/top/anime/\",\n  MANGA_INFO = \"/ohara-ui/top/manga/\",\n  MANGA_PAGE = \"/ohara-ui/top/manga/:id\",\n  ERROR_PAGE = \"/ohara-ui/*\",\n\n  LOGIN = \"/ohara-ui/login\",\n  SIGNIN = \"/ohara-ui/signin\",\n}\n\nexport default Routes;\n","enum API {\n  LOGIN = \"api/login\",\n  SIGNIN = \"api/signin\",\n  HOME = \"api/home\",\n  TOPANIME = \"api/top/anime\",\n  TOPMANGA = \"api/top/manga\",\n  ANIME_DETAIL = \"api/top/anime\",\n  MANGA_DETAIL = \"api/top/manga\",\n}\n\nexport default API;\n","interface Anime {\n  title: string;\n  image: string;\n  trailer: string;\n  score: number;\n  synopsis: string;\n  genres: string[];\n  opening: string[];\n  ending: string[];\n  id: number;\n  episodes: number;\n  published: string;\n  duration: string;\n  premiered: string;\n}\n\nexport const animeBuilder = (values: Partial<Anime> = {}): Anime => ({\n  title: \"\",\n  image: \"\",\n  trailer: \"\",\n  episodes: 0,\n  premiered: \"\",\n  score: 0,\n  synopsis: \"\",\n  genres: [],\n  opening: [],\n  ending: [],\n  id: 0,\n  published: \"\",\n  duration: \"\",\n  ...values,\n});\n\nexport default Anime;\n","import Anime from \"models/Anime\";\n\nexport const formatAnime = (props: any): Anime => ({\n  title: props.title,\n  image: props.image_url,\n  trailer: props.trailer_url,\n  score: props.score,\n  synopsis: props.synopsis,\n  episodes: props.episodes,\n  genres: props.genres && props.genres.map((genre: any) => genre.name),\n  opening: props.opening_themes,\n  ending: props.ending_themes,\n  id: props.mal_id,\n  published: props.aired.string,\n  duration: props.duration,\n  premiered: props.premiered,\n});\n","import API from \"constants/API\";\nimport Routes from \"constants/Routes\";\nimport Anime, { animeBuilder } from \"models/Anime\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { formatAnime } from \"utils/anime\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"60%\",\n    height: \"60%\",\n    background: \"rgba(255, 255, 255, .6)\",\n  },\n};\n\nconst AnimePage = () => {\n  const [anime, setAnime] = useState<Anime>(animeBuilder());\n  const [modalIsOpen, setIsOpen] = useState<boolean>(false);\n  const PATH = process.env.REACT_APP_PATH;\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getAnime = async () => {\n      await fetch(PATH + API.ANIME_DETAIL + \"/\" + id)\n        .then((data) => data.json())\n        .then((res) => {\n          setAnime(formatAnime(res.response));\n        });\n    };\n    getAnime();\n  }, [id, PATH]);\n\n  return (\n    <section className=\"flex flex-col items-center h-full pt-12 bg-darkblue-500\">\n      <div className=\"container flex flex-col\">\n        <div>\n          <Link\n            to={Routes.HOME_PAGE}\n            className=\"w-auto mr-5 font-bold text-center text-orange-600 bg-transparent border-b-2 border-transparent hover:border-orange-500\"\n          >\n            <i className=\"mr-1 fas fa-arrow-left\" /> Back to Home\n          </Link>\n        </div>\n        <div className=\"flex\">\n          <aside className=\"pt-3\">\n            <img src={anime.image} alt={anime.title} className=\"w-56 h-auto\" />\n            <Modal\n              isOpen={modalIsOpen}\n              onRequestClose={() => setIsOpen(false)}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n              <iframe\n                style={{ width: \"100%\", height: \"100%\" }}\n                src={anime.trailer}\n                frameBorder=\"0\"\n                allow=\"encrypted-media\"\n                allowFullScreen\n                title=\"video\"\n              />\n            </Modal>\n          </aside>\n          <div className=\"flex flex-col w-3/5 pl-3\">\n            <div className=\"flex items-center\">\n              <h1 className=\"m-0 text-3xl font-bold text-orange-500\">\n                {anime.title}\n              </h1>\n              <i\n                onClick={() => setIsOpen(true)}\n                className=\"ml-2 text-red-700 cursor-pointer fab fa-youtube fa-2x\"\n              ></i>\n            </div>\n            <p className=\"mb-1 text-stars-500\">\n              <span className=\"mr-2 text-orange-500\">Score:</span>\n              {anime.score}\n              <br />\n              <span className=\"mr-2 text-orange-500\">Genres:</span>\n              {anime.genres.join(\", \")}\n              <br />\n              <span className=\"mr-2 text-orange-500\">Premiered:</span>\n              {anime.premiered}\n              <br />\n              <span className=\"mr-2 text-orange-500\">Published:</span>\n              {anime.published}\n              <br />\n              <span className=\"mr-2 text-orange-500\">Duration:</span>\n              {anime.duration}\n              <br />\n              <span className=\"mr-2 text-orange-500\">synopsis:</span>\n              {anime.synopsis}\n            </p>\n            <ul className=\"mb-1 text-stars-500\">\n              <span className=\"mr-2 text-orange-500\">Opening:</span>\n              {anime.opening.map((op: string, index: number) => (\n                <li key={index} className=\"ml-5\">\n                  <p key={index} className=\"m-0\">\n                    - {op}\n                  </p>\n                </li>\n              ))}\n            </ul>\n            <ul className=\"mb-1 text-stars-500\">\n              <span className=\"mr-2 text-orange-500\">Ending:</span>\n              {anime.ending.map((end: string, index: number) => (\n                <li key={index} className=\"ml-5\">\n                  <p key={index} className=\"m-0\">\n                    - {end}\n                  </p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default AnimePage;\n","import React from \"react\";\n\nconst Error = () => {\n  return <p>Error 404</p>;\n};\n\nexport default Error;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"flex flex-col items-center bg-darkblue-500\">\n      <div className=\"w-full border-t-2 border-orange-500\" />\n      <section className=\"container flex items-center justify-between\">\n        <div className=\"flex items-center w-6/12\">\n          <img\n            width=\"55\"\n            height=\"55\"\n            alt=\"Jikan logo\"\n            className=\"m-5 \"\n            src=\"https://static.apiary.io/assets/fX9wgjhh.png\"\n          />\n          <div>\n            <a\n              href=\"https://jikan.moe/\"\n              className=\"text-4xl text-orange-500 underline\"\n            >\n              Jikan API\n            </a>\n            <p className=\"text-orange-500\">Unofficial MyAnimeList API</p>\n          </div>\n        </div>\n        <div className=\"flex flex-col text-orange-500\">\n          <a href=\"https://github.com/Magizchi\">\n            <i className=\"text-orange-500 fab fa-3x fa-github\"></i>\n          </a>\n        </div>\n      </section>\n    </footer>\n  );\n};\n\nexport default Footer;\n","//lib\n//context\nimport Routes from \"constants/Routes\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Header = () => {\n  // const { cookie, setCookie } = useContext(CookiesContext);\n\n  // const notify = () => {\n  //   toast.info(\"Disconnected !\", {\n  //     position: toast.POSITION.TOP_CENTER,\n  //   });\n  //   Cookies.remove(\"token\");\n  //   setCookie(\"\");\n  // };\n\n  return (\n    <>\n      <header className=\"flex items-center justify-center w-full bg-darkblue-500\">\n        <div className=\"container flex items-center justify-between w-full\">\n          <h1>\n            <Link\n              to={Routes.HOME_PAGE}\n              className=\"hidden w-full text-4xl text-orange-500 sm:block\"\n            >\n              Ohara\n            </Link>\n            <Link\n              to={Routes.HOME_PAGE}\n              className=\"w-full text-4xl text-orange-500 sm:hidden\"\n            >\n              ML\n            </Link>\n          </h1>\n          <ToastContainer\n            enableMultiContainer\n            position={toast.POSITION.TOP_CENTER}\n          />\n          <div>\n            <a\n              href=\"#anime\"\n              className=\"mr-5 font-bold text-center text-orange-600 bg-transparent border-b-2 border-transparent hover:border-orange-500\"\n            >\n              Anime\n            </a>\n            <a\n              href=\"#manga\"\n              className=\"mr-5 font-bold text-center text-orange-600 bg-transparent border-b-2 border-transparent hover:border-orange-500\"\n            >\n              Manga\n            </a>\n          </div>\n          {/* {cookie ? (\n            <BtnProfile func={notify}></BtnProfile>\n          ) : (\n            <div className=\"flex m-3\">\n              <Button link={Routes.LOGIN} name=\"LOGIN\" classNames=\"\" />\n              <Button link={Routes.SIGNIN} name=\"SIGNUP\" classNames=\"\" />\n            </div>\n          )} */}\n        </div>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { FunctionComponent, useState } from \"react\";\n\ninterface CardProps {\n  title: string;\n  image: string;\n  id: number;\n  more?: string;\n  score?: number;\n  onClick?: Function | any;\n}\n\nconst Card: FunctionComponent<CardProps> = ({ title, image, id, onClick }) => {\n  const [isHover, setIsHover] = useState(false);\n  return (\n    <div\n      onMouseOver={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n      onClick={() => onClick(id)}\n      className=\"w-full m-2 list-none cursor-pointer sm:w-auto sm:h-64\"\n    >\n      <div\n        className=\"hidden w-40 h-64 sm:scale-110 sm:bg-cover sm:bg-no-repeat sm:block\"\n        style={{\n          backgroundImage: `url(${image})`,\n          height: \"100%\",\n        }}\n      >\n        {isHover && (\n          <div\n            className=\"flex items-center justify-center h-full text-center\"\n            style={{ backgroundColor: \"rgba(255,255,255,0.7)\" }}\n          >\n            <p className=\"font-bold text-darkblue-500\">{title}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","interface Manga {\n  title: string;\n  status: string;\n  type: string;\n  volumes: string;\n  chapters: string;\n  published: string;\n  image: string;\n  score: number;\n  synopsis: string;\n  genres: string[];\n  id: number;\n}\n\nexport const mangaBuilder = (values: Partial<Manga> = {}): Manga => ({\n  title: \"\",\n  status: \"\",\n  type: \"\",\n  volumes: \"\",\n  chapters: \"\",\n  published: \"\",\n  image: \"\",\n  score: 0,\n  synopsis: \"\",\n  genres: [],\n  id: 0,\n  ...values,\n});\n\nexport default Manga;\n","import Card from \"models/Card\";\n\nexport const formatCard = (props: any): Card => ({\n  title: props.title,\n  image: props.image_url,\n  score: props.score,\n  id: props.mal_id\n});\n","import Manga from \"models/Manga\";\n\nexport const formatManga = (props: any): Manga => ({\n  title: props.title,\n  image: props.image_url,\n  score: props.score,\n  synopsis: props.synopsis,\n  genres: props.genres.map((genre: any) => genre.name),\n  status: props.status,\n  published: props.published.string,\n  type: props.type,\n  volumes: props.volumes,\n  chapters: props.chapters,\n  id: props.mal_id,\n});\n","import Routes from \"constants/Routes\";\nimport Anime from \"models/Anime\";\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Collapse } from \"react-collapse\";\nimport { Link } from \"react-router-dom\";\n\ninterface AnimeInfoProps {\n  anime: Anime;\n}\n\ninterface FunctionProps extends AnimeInfoProps {\n  onClick: Function;\n}\n\nconst AnimeInfo: FunctionComponent<FunctionProps> = ({ anime, onClick }) => {\n  const [isCollapse, setIsCollapse] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (anime.trailer === null) {\n      setIsCollapse(true);\n    } else if (anime.trailer !== null) {\n      setIsCollapse(false);\n    }\n  }, [anime.trailer]);\n\n  return (\n    <article className=\"flex flex-col mt-10 mb-10 text-stars-500\">\n      <div className=\"flex justify-end\">\n        <i\n          onClick={() => onClick()}\n          className=\"p-3 fa-2x fas fa-times hover:text-orange-600\"\n        ></i>\n      </div>\n      <div className=\"flex w-full\">\n        <div className=\"w-4/12 mr-10 \">\n          <h2 className=\"text-lg\">{anime.title}</h2>\n          <p>{anime.episodes} episodes</p>\n          {/* <p>Genre:</p> */}\n          <p>Opening:</p>\n          <ul>\n            {anime.opening.map((op, index) => (\n              <li key={index} className=\"ml-3\">\n                - {op}\n              </li>\n            ))}\n          </ul>\n          <p>Ending</p>\n          <ul>\n            {anime.ending.map((end, index) => (\n              <li key={index} className=\"ml-3\">\n                - {end}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <aside className=\"w-8/12\">\n          {anime.trailer && (\n            <iframe\n              style={{ width: \"100%\", height: \"400px\" }}\n              src={anime.trailer}\n              frameBorder=\"0\"\n              allow=\"encrypted-media\"\n              allowFullScreen\n              title=\"video\"\n              className=\"mb-5\"\n            />\n          )}\n          <div>\n            <div className=\"flex items-center\">\n              <p className=\"mr-5\">Synopsis</p>\n              <button\n                style={{ outline: \"none\" }}\n                onClick={() => setIsCollapse(!isCollapse)}\n              >\n                {isCollapse ? (\n                  <i className=\"flex items-center justify-center w-5 h-5 rounded-full fas fa-chevron-down hover:bg-blueGray-600\"></i>\n                ) : (\n                  <i className=\"flex items-center justify-center w-5 h-5 rounded-full hover:bg-blueGray-600 fas fa-chevron-up\"></i>\n                )}\n              </button>\n            </div>\n            <Collapse isOpened={isCollapse}>\n              <p>{anime.synopsis}</p>\n            </Collapse>\n          </div>\n        </aside>\n      </div>\n      <div className=\"flex justify-end\">\n        <Link\n          to={Routes.ANIME_INFO + anime.id}\n          className=\"text-sm text-orange-500\"\n        >\n          more info...\n        </Link>\n      </div>\n    </article>\n  );\n};\n\nexport default AnimeInfo;\n","import Routes from \"constants/Routes\";\nimport Manga from \"models/Manga\";\nimport React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface MangaInfoProps {\n  manga: Manga;\n}\n\ninterface FunctionProps extends MangaInfoProps {\n  onClick: Function;\n}\n\nconst MangaInfo: FunctionComponent<FunctionProps> = ({ manga, onClick }) => {\n  return (\n    <article className=\"flex flex-col mt-10 mb-10 text-stars-500\">\n      <div className=\"flex justify-end\">\n        <i\n          onClick={() => onClick()}\n          className=\"fa-2x fas fa-times hover:text-orange-600\"\n        />\n      </div>\n      <div className=\"flex w-full\">\n        <div className=\"w-4/12 mr-10\">\n          <h2 className=\"text-lg\">{manga.title}</h2>\n          {manga.volumes && <p>{manga.volumes} volumes</p>}\n          {manga.chapters && <p>{manga.chapters} chapters</p>}\n          <p>Published {manga.published}</p>\n          {/* <p>Genre:</p> */}\n          <p>Status: {manga.status}</p>\n        </div>\n        <div className=\"w-8/12\">\n          <p className=\"mr-5\">Synopsis: </p>\n          <p>{manga.synopsis}</p>\n        </div>\n      </div>\n      <div className=\"flex justify-end\">\n        <Link\n          to={Routes.MANGA_INFO + manga.id}\n          className=\"text-sm text-orange-500\"\n        >\n          more info...\n        </Link>\n      </div>\n    </article>\n  );\n};\n\nexport default MangaInfo;\n","import LoadingSVG from \"assets/svg/Ellipsis.svg\";\nimport Card from \"components/molecules/Card\";\nimport API from \"constants/API\";\nimport Anime, { animeBuilder } from \"models/Anime\";\nimport Home, { homeBuilder } from \"models/Home\";\nimport Manga, { mangaBuilder } from \"models/Manga\";\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"react-collapse\";\nimport Slider from \"react-slick\";\nimport { formatAnime } from \"utils/anime\";\nimport { formatCard } from \"utils/card\";\nimport { formatManga } from \"utils/manga\";\nimport AnimeInfo from \"./AnimeInfo\";\nimport MangaInfo from \"./MangaInfo\";\n\nconst HomePage = () => {\n  const [homeInfo, setHomeInfo] = useState<Home>(homeBuilder());\n  const [PATH] = useState(process.env.REACT_APP_PATH);\n  const [animeId, setAnimeId] = useState<number>();\n  const [mangaId, setMangaId] = useState<number>();\n  const [selectedAnime, setSelectedAnime] = useState<Anime>(animeBuilder());\n  const [selectedManga, setSelectedManga] = useState<Manga>(mangaBuilder());\n  const [animeCollapse, setAnimeCollapse] = useState<boolean>(false);\n  const [MangaCollapse, setMangaCollapse] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetch(PATH + API.HOME, { mode: \"cors\" })\n      .then((data) => data.json())\n      .then((res) =>\n        setHomeInfo({\n          favorite: res.result.favorite.map((favorite: any) =>\n            formatCard(favorite)\n          ),\n          anime: res.result.anime.map((anime: any) => formatCard(anime)),\n          manga: res.result.manga.map((manga: any) => formatCard(manga)),\n        })\n      );\n  }, [PATH]);\n\n  useEffect(() => {\n    animeId &&\n      fetch(\"https://api.jikan.moe/v3/anime/\" + animeId, { mode: \"cors\" })\n        .then((data) => data.json())\n        .then((res) => {\n          setSelectedAnime(formatAnime(res));\n          setSelectedManga(mangaBuilder());\n          setAnimeCollapse(true);\n          setMangaCollapse(false);\n        });\n  }, [animeId]);\n\n  useEffect(() => {\n    mangaId &&\n      fetch(\"https://api.jikan.moe/v3/manga/\" + mangaId, { mode: \"cors\" })\n        .then((data) => data.json())\n        .then((res) => {\n          setSelectedManga(formatManga(res));\n          setSelectedAnime(animeBuilder());\n          setAnimeCollapse(false);\n          setMangaCollapse(true);\n        });\n  }, [mangaId]);\n\n  if (homeInfo && homeInfo.anime.length > 0) {\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 7,\n      slidesToScroll: 6,\n    };\n    return (\n      <main className=\"flex flex-col items-center justify-center min-h-screen bg-darkblue-500\">\n        <section id=\"#anime\" className=\"container flex flex-col mb-8 \">\n          <h2 className=\"text-lg font-bold text-orange-500\">Top Anime</h2>\n          <Collapse isOpened={animeCollapse}>\n            <AnimeInfo\n              anime={selectedAnime}\n              onClick={() => {\n                setAnimeCollapse(!animeCollapse);\n                setSelectedAnime(animeBuilder());\n              }}\n            />\n          </Collapse>\n          <Slider className=\"text-black\" {...settings}>\n            {homeInfo.anime.map((m, index: number) => {\n              return (\n                <Card\n                  key={index}\n                  image={m.image}\n                  title={m.title}\n                  id={m.id}\n                  onClick={setAnimeId}\n                />\n              );\n            })}\n          </Slider>\n        </section>\n        <section id=\"#manga\" className=\"container\">\n          <h2 className=\"text-lg font-bold text-orange-500\">Top Manga</h2>\n          <Collapse isOpened={MangaCollapse}>\n            <MangaInfo\n              manga={selectedManga}\n              onClick={() => setMangaCollapse(!MangaCollapse)}\n            />\n          </Collapse>\n          <ul>\n            <Slider {...settings}>\n              {homeInfo.manga.map((m, index: number) => {\n                return (\n                  <Card\n                    key={index}\n                    image={m.image}\n                    title={m.title}\n                    id={m.id}\n                    onClick={setMangaId}\n                  />\n                );\n              })}\n            </Slider>\n          </ul>\n        </section>\n      </main>\n    );\n  } else {\n    return (\n      <main className=\"flex items-center justify-center w-full h-screen bg-darkblue-500\">\n        <img\n          className=\"bg-no-repeat\"\n          src={LoadingSVG}\n          alt=\"Rolling\"\n          height=\"138\"\n          width=\"138\"\n        />\n      </main>\n    );\n  }\n};\n\nexport default HomePage;\n","import Card from \"./Card\";\n\n//Models\n\ninterface Home {\n  favorite: Card[];\n  anime: Card[];\n  manga: Card[];\n}\n\nexport const homeBuilder = (values: Partial<Home> = {}): Home => ({\n  favorite: [],\n  anime: [],\n  manga: [],\n  ...values\n});\n\nexport default Home;\n","import API from \"constants/API\";\nimport Routes from \"constants/Routes\";\nimport Manga, { mangaBuilder } from \"models/Manga\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { formatManga } from \"utils/manga\";\n\nconst MangaPage = () => {\n  const [manga, setManga] = useState<Manga>(mangaBuilder());\n  const { id } = useParams();\n  const PATH = process.env.REACT_APP_PATH;\n\n  useEffect(() => {\n    const getManga = async () => {\n      await fetch(PATH + API.MANGA_DETAIL + \"/\" + id)\n        .then((data) => data.json())\n        .then((res) => {\n          setManga(formatManga(res.response));\n        });\n    };\n    getManga();\n  }, [id, PATH]);\n\n  return (\n    <section className=\"flex justify-center h-screen pt-12 bg-darkblue-500 \">\n      <div className=\"container flex flex-col\">\n        <div>\n          <Link\n            to={Routes.HOME_PAGE}\n            className=\"w-auto mr-5 font-bold text-center text-orange-600 bg-transparent border-b-2 border-transparent hover:border-orange-500\"\n          >\n            <i className=\"mr-1 fas fa-arrow-left\" /> Back to Home\n          </Link>\n        </div>\n        <div className=\"flex\">\n          <aside className=\"pt-3\">\n            <img src={manga.image} alt={manga.title} className=\"w-56 h-auto\" />\n          </aside>\n          <div className=\"flex flex-col w-3/5 pl-3\">\n            <div className=\"flex items-center\">\n              <h1 className=\"m-0 text-3xl font-bold text-orange-500\">\n                {manga.title}\n              </h1>\n            </div>\n            <p className=\"mb-1 text-stars-500\">\n              <span className=\"mr-2 text-orange-500\">Score:</span>\n              {manga.score}\n              <br />\n              <span className=\"mr-2 text-orange-500\">Genres:</span>\n              {manga.genres.join(\", \")}\n              <br />\n\n              <span className=\"mr-2 text-orange-500\">Published:</span>\n              {manga.published}\n              <br />\n\n              <span className=\"mr-2 text-orange-500\">synopsis:</span>\n              {manga.synopsis}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default MangaPage;\n","import React, { useState } from \"react\";\nimport Cookies from \"js-cookie\";\n\ninterface ApplyCookies {\n  cookie: string;\n  setCookie: Function;\n}\n\ninterface children {\n  children: any;\n}\n\nexport const CookiesContext = React.createContext<ApplyCookies>({\n  cookie: \"\",\n  setCookie: () => {}\n});\n\nexport const Authentication = ({ children }: children) => {\n  const [cookie, setCookie] = useState<string>(Cookies.get(\"token\")!);\n  return (\n    <CookiesContext.Provider value={{ cookie, setCookie }}>\n      {children}\n    </CookiesContext.Provider>\n  );\n};\n","import \"App.css\";\nimport Routes from \"constants/Routes\";\nimport AnimePage from \"containers/AnimePage\";\nimport Error404 from \"containers/Errors/404\";\nimport Footer from \"containers/Footer/Footer\";\nimport Header from \"containers/Header\";\nimport Home from \"containers/Home\";\nimport MangaPage from \"containers/MangaPage\";\nimport { Authentication } from \"contexts/Cookies\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst App = () => {\n  return (\n    <Router>\n      <Authentication>\n        <Header />\n        <Switch>\n          {/* <Route exact path={Routes.LOGIN} component={LogIn} /> */}\n          {/* <Route exact path={Routes.SIGNIN} component={SignIn} /> */}\n          <Route exact path={Routes.HOME_PAGE} component={Home} />\n          <Route exact path={Routes.ANIME_PAGE} component={AnimePage} />\n          <Route exact path={Routes.MANGA_PAGE} component={MangaPage} />\n          {/* <Route exact path={Routes.ANIME} component={AnimeDetail} /> */}\n          {/* <Route exact path={Routes.MANGA} component={MangaDetail} /> */}\n          <Route path={Routes.ERROR_PAGE} component={Error404} />\n        </Switch>\n        <Footer />\n      </Authentication>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}